/* You can add global styles to this file, and also import other style files */
@import "~bootstrap/dist/css/bootstrap.css";

@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');

:root{
  --font-size-base: 1rem;
  --font-size-biggish: 1.75rem;
  --font-size-big: 2.25rem;

  --shadow-01: 0px 2px 4px rgba(37, 37, 37, 0.1);
  --shadow-02: 0px 4px 8px rgba(37, 37, 37, 0.1);
  --shadow-03: 0px 8px 16px rgba(37, 37, 37, 0.1);
  --shadow-04: 0px 16px 24px rgba(37, 37, 37, 0.1);
  --shadow-05: 0px 24px 32px rgba(37, 37, 37, 0.1);

  --color-white-100: rgba(255, 255, 255, 1);
  --color-white-75: rgba(255, 255, 255, 0.75);
  --color-white-50: rgba(255, 255, 255, 0.5);
  --color-white-25: rgba(255, 255, 255, 0.25);

  --color-grey-100: rgba(243, 243, 243, 1);
  --color-grey-75: rgba(243, 243, 243, 0.75);
  --color-grey-50: rgba(243, 243, 243, 0.5);
  --color-grey-25: rgba(243, 243, 243, 0.25);

  --color-black-100: rgba(0, 0, 0, 1);
  --color-black-75: rgba(0, 0, 0, 0.75);
  --color-black-50: rgba(0, 0, 0, 0.5);
  --color-black-25: rgba(0, 0, 0, 0.25);

  --color-dgrey-100: rgba(48, 48, 48, 1);
  --color-dgrey-75: rgba(48, 48, 48, 0.75);
  --color-dgrey-50: rgba(48, 48, 48, 0.5);
  --color-dgrey-25: rgba(48, 48, 48, 0.25);

  --color-lgrey-100: rgba(171, 171, 171, 1);
  --color-lgrey-75: rgba(171, 171, 171, 0.75);
  --color-lgrey-50: rgba(171, 171, 171, 0.5);
  --color-lgrey-25: rgba(171, 171, 171, 0.25);

  --color-green-100: rgba(133, 187, 101, 1);
  --color-green-75: rgba(133, 187, 101, 0.75);
  --color-green-50: rgba(133, 187, 101, 0.5);
  --color-green-25: rgba(133, 187, 101, 0.25);

  --color-red-100: rgba(231, 87, 87, 1);
  --color-red-75: rgba(231, 87, 87, 0.75);
  --color-red-50: rgba(231, 87, 87, 0.5);
  --color-red-25: rgba(231, 87, 87, 0.25);

  --success: #19b262;
  --error: #e3174b;
  --warning: #ffbb38;
  --primary: #2a90fc;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Lato', sans-serif;
}

p {
  font-family: 'Lato', sans-serif;
}

.lato {
  font-family: 'Lato', sans-serif;
}

h3 {
  font-size: var(--font-size-biggish);
}
h2 {
  font-size: var(--font-size-big);
}

.font-size\:base {
  font-size: var(--font-size-base) !important;
}

.font-size\:biggish {
  font-size: var(--font-size-biggish) !important;
}

.font-size\:big {
  font-size: var(--font-size-big) !important;
}

$values: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40
  41 43 44 45 47 48 50 52 55 56 60 65 70 72 80 90 100 130 140 160 180 257 280 300;

@for $v from 1 through length($values) {
    .m#{nth($values, $v)} {
        margin: nth($values, $v) + px !important;
    }
    .p#{nth($values, $v)} {
        padding: nth($values, $v) + px !important;
    }
    .mt#{nth($values, $v)} {
        margin-top: nth($values, $v) + px !important;
    }
    .mbt#{nth($values, $v)} {
        margin-bottom: nth($values, $v) + px !important;
    }
    .ml#{nth($values, $v)} {
        margin-left: nth($values, $v) + px !important;
    }
    .mr#{nth($values, $v)} {
        margin-right: nth($values, $v) + px !important;
    }
    .pt#{nth($values, $v)} {
        padding-top: nth($values, $v) + px !important;
    }
    .pbt#{nth($values, $v)} {
        padding-bottom: nth($values, $v) + px !important;
    }
    .pl#{nth($values, $v)} {
        padding-left: nth($values, $v) + px !important;
    }
    .pr#{nth($values, $v)} {
        padding-right: nth($values, $v) + px !important;
    }
    .p-bt-t#{nth($values, $v)} {
        padding: nth($values, $v) + px 0px !important;
    }
    .t#{nth($values, $v)} {
        top: nth($values, $v) + px !important;
    }
    .r#{nth($values, $v)} {
        right: nth($values, $v) + px !important;
    }
    .b#{nth($values, $v)} {
        bottom: nth($values, $v) + px !important;
    }
    .l#{nth($values, $v)} {
        left: nth($values, $v) + px !important;
    }
}

$valueFont: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 24 28 30 31 32 35 40 42 48 54;

@for $v from 1 through length($valueFont) {
    .f#{nth($valueFont, $v)} {
        font-size: nth($valueFont, $v) + px !important;
    }
}

$valueHeight: 0 22 24 47 50 60 70 72 80 90 130 180 186 260 272 485 710 830;

@for $v from 1 through length($valueHeight) {
    .h#{nth($valueHeight, $v)}px {
        height: nth($valueHeight, $v) + px !important;
    }
}

$valueWidth: 1 4 5 8 9 10 12 15 20 21 22 23 25 26 27 28 30 31 32 35 39 40 45 46 48 50 55 57 60 65 70 71 74 75 79 80 82
    85 87 90 93 95 96 97 98 99 100 126 155 170 200;

@for $v from 1 through length($valueWidth) {
    .w#{nth($valueWidth, $v)}p {
        width: calc(nth($valueWidth, $v) / 100) !important;
    }
    .h#{nth($valueWidth, $v)}p {
        height: calc(nth($valueWidth, $v) / 100) !important;
    }
    .maxw#{nth($valueWidth, $v)}p {
        max-width: calc(nth($valueWidth, $v) / 100) !important;
    }
    .maxh#{nth($valueWidth, $v)}p {
        max-height: calc(nth($valueWidth, $v) / 100) !important;
    }
    .minw#{nth($valueWidth, $v)}p {
        min-width: calc(nth($valueWidth, $v) / 100) !important;
    }
    .minh#{nth($valueWidth, $v)}p {
        min-height: calc(nth($valueWidth, $v) / 100) !important;
    }
    .maxw#{nth($valueWidth, $v)}vw {
        max-width: calc(nth($valueWidth, $v) / 100) !important;
    }
  }

$valueWidthP: 0 10 12 13 15 16 17 18 20 21 22 23 24 25 26 27 28 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50 55 56 60 61 63 64 66 70 71 72 75 79 80 85 95 99 100 105 115 119 120 122 126 128 137 138 140 150 157 160 164 169
    170 175 180 200 210 215 218 225 230 240 250 260 270 280 285 300 320 350 360 380 400 495 500 630 700;

@for $v from 1 through length($valueWidthP) {
    .w#{nth($valueWidthP, $v)}px {
        width: nth($valueWidthP, $v) + px !important;
    }
    .h#{nth($valueWidthP, $v)}px {
        height: nth($valueWidthP, $v) + px !important;
    }
    .maxw#{nth($valueWidthP, $v)}px {
        max-width: nth($valueWidthP, $v) + px !important;
    }
    .maxh#{nth($valueWidthP, $v)}px {
        max-height: nth($valueWidthP, $v) + px !important;
    }
    .minw#{nth($valueWidthP, $v)}px {
        min-width: nth($valueWidthP, $v) + px !important;
    }
    .minh#{nth($valueWidthP, $v)}px {
        min-height: nth($valueWidthP, $v) + px !important;
    }
    .lh#{nth($valueWidthP, $v)}px {
        line-height: nth($valueWidthP, $v) + px !important;
    }
}

.card {
    box-shadow: var(--shadow-01);
    border: 1px solid var(--border-color);

    transition: box-shadow .2s linear;

    &:hover,
    &:focus {
        box-shadow: var(--shadow-03);
    }
}

.color-white-100{
  color: var(--color-white-100);
}

.color-white-75{
  color: var(--color-white-75);
}

.color-white-50{
  color: var(--color-white-50);
}

.color-white-25{
  color: var(--color-white-25);
}

.color-grey-100{
  color: var(--color-grey-100);
}

.color-grey-75{
  color: var(--color-grey-75);
}

.color-grey-50{
  color: var(--color-grey-50);
}

.color-grey-25{
  color: var(--color-grey-25);
}

.color-dgrey-100{
  color: var(--color-dgrey-100);
}

.color-dgrey-75{
  color: var(--color-dgrey-75);
}

.color-dgrey-50{
  color: var(--color-dgrey-50);
}

.color-dgrey-25{
  color: var(--color-dgrey-25);
}

.color-lgrey-100{
  color: var(--color-lgrey-100);
}

.color-lgrey-75{
  color: var(--color-lgrey-75);
}

.color-lgrey-50{
  color: var(--color-lgrey-50);
}

.color-lgrey-25{
  color: var(--color-lgrey-25);
}

.color-green-100{
  color: var(--color-green-100);
}

.color-green-75{
  color: var(--color-green-75);
}

.color-green-50{
  color: var(--color-green-50);
}

.color-green-25{
  color: var(--color-green-25);
}

.color-red-100{
  color: var(--color-red-100);
}

.color-red-75{
  color: var(--color-red-75);
}

.color-red-50{
  color: var(--color-red-50);
}

.color-red-25{
  color: var(--color-red-25);
}

.color-black-100{
  color: var(--color-black-100);
}

.color-black-75{
  color: var(--color-black-75);
}

.color-black-50{
  color: var(--color-black-50);
}

.color-black-25{
  color: var(--color-black-25);
}

// template
.container-25 {
  width: 25%;
  margin: auto;
}

.container-50 {
  width: 50%;
  margin: auto;
}

.container-75 {
  width: 75%;
  margin: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-scroll {
  overflow: auto;
}

.header-close-btn {
  cursor: pointer;
}
